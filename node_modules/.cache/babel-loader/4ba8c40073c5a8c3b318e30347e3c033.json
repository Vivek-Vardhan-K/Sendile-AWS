{"ast":null,"code":"import { createStore } from \"redux\";\nconst obj = {\n  jwtToken: \"\",\n  haveToken: false,\n  haveEmail: false,\n  isLoading: false,\n  email: \"\"\n};\n\nconst reducerfn = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : obj;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"UPDATE_TOKEN\") {\n    return { ...state,\n      haveToken: !state.haveToken,\n      jwtToken: action.jwtToken\n    };\n  }\n\n  if (action.type === \"FORGET_TOKEN\") {\n    return { ...state,\n      haveToken: !state.haveToken,\n      jwtToken: \"\"\n    };\n  }\n\n  if (action.type === \"UPDATE_EMAIL\") {\n    return { ...state,\n      haveEmail: true,\n      email: action.email\n    };\n  }\n\n  if (action.type === \"SWITCH_LOADING\") {\n    return { ...state,\n      isLoading: !state.isLoading\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(reducerfn);\nexport default store;","map":{"version":3,"sources":["C:/Users/vivek/OneDrive/Desktop/React Files/Sendile-master/Sendile-master/sendile/Sendile-AWS/src/redux/index.js"],"names":["createStore","obj","jwtToken","haveToken","haveEmail","isLoading","email","reducerfn","state","action","type","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,GAAG,GAAG;AACVC,EAAAA,QAAQ,EAAE,EADA;AAEVC,EAAAA,SAAS,EAAE,KAFD;AAGVC,EAAAA,SAAS,EAAE,KAHD;AAIVC,EAAAA,SAAS,EAAE,KAJD;AAKVC,EAAAA,KAAK,EAAE;AALG,CAAZ;;AAOA,MAAMC,SAAS,GAAG,YAAyB;AAAA,MAAxBC,KAAwB,uEAAhBP,GAAgB;AAAA,MAAXQ,MAAW;;AACzC,MAAIA,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;AAClC,WAAO,EACL,GAAGF,KADE;AAELL,MAAAA,SAAS,EAAE,CAACK,KAAK,CAACL,SAFb;AAGLD,MAAAA,QAAQ,EAAEO,MAAM,CAACP;AAHZ,KAAP;AAKD;;AACD,MAAIO,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;AAClC,WAAO,EACL,GAAGF,KADE;AAELL,MAAAA,SAAS,EAAE,CAACK,KAAK,CAACL,SAFb;AAGLD,MAAAA,QAAQ,EAAE;AAHL,KAAP;AAKD;;AACD,MAAIO,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;AAClC,WAAO,EACL,GAAGF,KADE;AAELJ,MAAAA,SAAS,EAAE,IAFN;AAGLE,MAAAA,KAAK,EAAEG,MAAM,CAACH;AAHT,KAAP;AAKD;;AACD,MAAIG,MAAM,CAACC,IAAP,KAAgB,gBAApB,EAAsC;AACpC,WAAO,EACL,GAAGF,KADE;AAELH,MAAAA,SAAS,EAAE,CAACG,KAAK,CAACH;AAFb,KAAP;AAID;;AACD,SAAOG,KAAP;AACD,CA7BD;;AA8BA,MAAMG,KAAK,GAAGX,WAAW,CAACO,SAAD,CAAzB;AAEA,eAAeI,KAAf","sourcesContent":["import { createStore } from \"redux\";\n\nconst obj = {\n  jwtToken: \"\",\n  haveToken: false,\n  haveEmail: false,\n  isLoading: false,\n  email: \"\",\n};\nconst reducerfn = (state = obj, action) => {\n  if (action.type === \"UPDATE_TOKEN\") {\n    return {\n      ...state,\n      haveToken: !state.haveToken,\n      jwtToken: action.jwtToken,\n    };\n  }\n  if (action.type === \"FORGET_TOKEN\") {\n    return {\n      ...state,\n      haveToken: !state.haveToken,\n      jwtToken: \"\",\n    };\n  }\n  if (action.type === \"UPDATE_EMAIL\") {\n    return {\n      ...state,\n      haveEmail: true,\n      email: action.email,\n    };\n  }\n  if (action.type === \"SWITCH_LOADING\") {\n    return {\n      ...state,\n      isLoading: !state.isLoading,\n    };\n  }\n  return state;\n};\nconst store = createStore(reducerfn);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}